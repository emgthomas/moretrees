[1] 10
[1] 20
[1] 30
[1] 40
[1] 50
[1] 60
[1] 70
[1] 80
[1] 90
[1] 100
[1] 110
[1] 120
[1] 130
[1] 140
[1] 150
[1] 160
[1] 170
[1] 180
[1] 190
[1] 200
[1] 210
[1] 220
[1] 230
[1] 240
[1] 250
[1] 260
[1] 270
[1] 280
[1] 290
[1] 300
[1] 310
[1] 320
[1] 330
[1] 340
[1] 350
[1] 360
[1] 370
[1] 380
[1] 390
[1] 400
[1] 410
[1] 420
[1] 430
[1] 440
[1] 450
[1] 460
[1] 470
[1] 480
[1] 490
[1] 500
[1] 510
[1] 520
[1] 530
[1] 540
[1] 550
[1] 560
[1] 570
[1] 580
[1] 590
[1] 600
[1] 610
[1] 620
[1] 630
[1] 640
[1] 650
[1] 660
[1] 670
[1] 680
[1] 690
[1] 700
[1] 710
[1] 720
[1] 730
[1] 740
[1] 750
[1] 760
[1] 770
[1] 780
[1] 790
[1] 800
[1] 810
[1] 820
[1] 830
[1] 840
[1] 850
[1] 860
[1] 870
[1] 880
[1] 890
[1] 900
[1] 910
[1] 920
[1] 930
[1] 940
[1] 950
[1] 960
[1] 970
[1] 980
[1] 990
[1] 1000
[1] 1010
[1] 1020
[1] 1030
[1] 1040
[1] 1050
[1] 1060
[1] 1070
[1] 1080
[1] 1090
[1] 1100
[1] 1110
[1] 1120
[1] 1130
[1] 1140
[1] 1150
[1] 1160
[1] 1170
[1] 1180
[1] 1190
[1] 1200
[1] 1210
[1] 1220
[1] 1230
[1] 1240
[1] 1250
[1] 1260
[1] 1270
[1] 1280
[1] 1290
[1] 1300
[1] 1310
[1] 1320
[1] 1330
[1] 1340
[1] 1350
[1] 1360
[1] 1370
[1] 1380
[1] 1390
[1] 1400
[1] 1410
[1] 1420
[1] 1430
[1] 1440
[1] 1450
[1] 1460
[1] 1470
[1] 1480
[1] 1490
[1] 1500
[1] 1510
[1] 1520
[1] 1530
[1] 1540
[1] 1550
[1] 1560
[1] 1570
[1] 1580
[1] 1590
[1] 1600
[1] 1610
[1] 1620
[1] 1630
[1] 1640
[1] 1650
[1] 1660
[1] 1670
[1] 1680
[1] 1690
[1] 1700
[1] 1710
[1] 1720
[1] 1730
[1] 1740
[1] 1750
[1] 1760
[1] 1770
[1] 1780
[1] 1790
[1] 1800
[1] 1810
[1] 1820
[1] 1830
[1] 1840
[1] 1850
[1] 1860
[1] 1870
[1] 1880
[1] 1890
[1] 1900
[1] 1910
[1] 1920
[1] 1930
[1] 1940
[1] 1950
[1] 1960
[1] 1970
[1] 1980
[1] 1990
[1] 2000
[1] 2010
[1] 2020
[1] 2030
[1] 2040
[1] 2050
[1] 2060
[1] 2070
[1] 2080
[1] 2090
[1] 2100
[1] 2110
[1] 2120
[1] 2130
[1] 2140
[1] 2150
[1] 2160
[1] 2170
[1] 2180
[1] 2190
[1] 2200
[1] 2210
[1] 2220
[1] 2230
[1] 2240
[1] 2250
[1] 2260
[1] 2270
[1] 2280
[1] 2290
[1] 2300
[1] 2310
[1] 2320
[1] 2330
[1] 2340
[1] 2350
[1] 2360
[1] 2370
[1] 2380
[1] 2390
[1] 2400
[1] 2410
[1] 2420
[1] 2430
[1] 2440
[1] 2450
[1] 2460
[1] 2470
[1] 2480
[1] 2490
[1] 2500
[1] 2510
[1] 2520
[1] 2530
[1] 2540
[1] 2550
[1] 2560
[1] 2570
[1] 2580
[1] 2590
[1] 2600
[1] 2610
[1] 2620
[1] 2630
[1] 2640
[1] 2650
[1] 2660
[1] 2670
[1] 2680
[1] 2690
[1] 2700
[1] 2710
[1] 2720
[1] 2730
[1] 2740
[1] 2750
[1] 2760
[1] 2770
[1] 2780
[1] 2790
[1] 2800
[1] 2810
[1] 2820
[1] 2830
[1] 2840
[1] 2850
[1] 2860
[1] 2870
[1] 2880
[1] 2890
[1] 2900
[1] 2910
[1] 2920
[1] 2930
[1] 2940
[1] 2950
[1] 2960
[1] 2970
[1] 2980
[1] 2990
[1] 3000
[1] "Converged after 3008 steps."
$by.self
                  self.time self.pct total.time total.pct mem.total
"unlist"             692.48    31.42     694.38     31.50  425012.8
"exp"                289.46    13.13     289.46     13.13  104699.1
"^"                  160.50     7.28     160.50      7.28   53826.7
"FUN"                152.72     6.93    2204.04    100.00 1161272.1
"-"                  143.16     6.50     143.16      6.50  105789.3
"g_fun"              114.30     5.19     503.22     22.83  266056.4
"/"                  109.80     4.98     109.80      4.98   61948.0
"log1p.exp.vec"       94.62     4.29     324.34     14.72  144782.2
"VI_step_ss"          81.72     3.71    2203.44     99.97 1161072.1
"log1p"               77.86     3.53      77.86      3.53       0.2
"*"                   77.12     3.50      77.12      3.50   43755.3
"sum"                 72.00     3.27      72.00      3.27   42511.5
"!="                  52.54     2.38      52.54      2.38   30976.6
"g_fun.vec"           24.08     1.09     310.92     14.11  143060.1
"<="                  22.96     1.04      22.96      1.04   25921.4
"ELBO.fun_ss"         14.08     0.64    1122.04     50.91  539809.5
"+"                   12.12     0.55      12.12      0.55    8443.4
"lapply"               4.30     0.20    2204.04    100.00 1161272.1
"diag<-"               2.68     0.12       2.76      0.13    2397.2
"%*%"                  1.92     0.09       1.92      0.09    1444.4
"("                    1.46     0.07       1.46      0.07     896.2
"length"               0.44     0.02       0.44      0.02     217.3
"unique"               0.42     0.02       0.84      0.04     425.5
"lengths"              0.20     0.01       0.20      0.01      91.2
"unique.default"       0.16     0.01       0.22      0.01     112.0
"=="                   0.16     0.01       0.16      0.01      86.5
"standardGeneric"      0.12     0.01       2.94      0.13    2499.3
"VI_binary_ss"         0.08     0.00    2204.04    100.00 1161272.1
"sapply"               0.08     0.00     425.96     19.33  197597.1
"match.fun"            0.08     0.00       0.08      0.00      15.8
"isFALSE"              0.06     0.00       0.12      0.01      58.6
"t"                    0.06     0.00       0.12      0.01      78.5
"cbind"                0.06     0.00       0.06      0.00      51.9
"is.factor"            0.06     0.00       0.06      0.00      31.3
"numeric"              0.06     0.00       0.06      0.00      22.9
"simplify2array"       0.04     0.00       0.88      0.04     456.6
"is.na"                0.04     0.00       0.04      0.00      19.6
"@<-"                  0.02     0.00       0.02      0.00       7.9
"list"                 0.02     0.00       0.02      0.00       7.8

$by.total
                        total.time total.pct mem.total self.time self.pct
"FUN"                      2204.04    100.00 1161272.1    152.72     6.93
"lapply"                   2204.04    100.00 1161272.1      4.30     0.20
"VI_binary_ss"             2204.04    100.00 1161272.1      0.08     0.00
"%dopar%"                  2204.04    100.00 1161272.1      0.00     0.00
"doTryCatch"               2204.04    100.00 1161272.1      0.00     0.00
"e$fun"                    2204.04    100.00 1161272.1      0.00     0.00
"eval"                     2204.04    100.00 1161272.1      0.00     0.00
"mclapply"                 2204.04    100.00 1161272.1      0.00     0.00
"sendMaster"               2204.04    100.00 1161272.1      0.00     0.00
"try"                      2204.04    100.00 1161272.1      0.00     0.00
"tryCatch"                 2204.04    100.00 1161272.1      0.00     0.00
"tryCatchList"             2204.04    100.00 1161272.1      0.00     0.00
"tryCatchOne"              2204.04    100.00 1161272.1      0.00     0.00
"VI_step_ss"               2203.44     99.97 1161072.1     81.72     3.71
"ELBO.fun_ss"              1122.04     50.91  539809.5     14.08     0.64
"unlist"                    694.38     31.50  425012.8    692.48    31.42
"g_fun"                     503.22     22.83  266056.4    114.30     5.19
"sapply"                    425.96     19.33  197597.1      0.08     0.00
"loglogit"                  357.62     16.23  175281.9      0.00     0.00
"log1p.exp.vec"             324.34     14.72  144782.2     94.62     4.29
"g_fun.vec"                 310.92     14.11  143060.1     24.08     1.09
"exp"                       289.46     13.13  104699.1    289.46    13.13
"^"                         160.50      7.28   53826.7    160.50     7.28
"-"                         143.16      6.50  105789.3    143.16     6.50
"/"                         109.80      4.98   61948.0    109.80     4.98
"log1p"                      77.86      3.53       0.2     77.86     3.53
"*"                          77.12      3.50   43755.3     77.12     3.50
"sum"                        72.00      3.27   42511.5     72.00     3.27
"!="                         52.54      2.38   30976.6     52.54     2.38
"<="                         22.96      1.04   25921.4     22.96     1.04
"+"                          12.12      0.55    8443.4     12.12     0.55
"standardGeneric"             2.94      0.13    2499.3      0.12     0.01
"diag<-"                      2.76      0.13    2397.2      2.68     0.12
"%*%"                         1.92      0.09    1444.4      1.92     0.09
"("                           1.46      0.07     896.2      1.46     0.07
"simplify2array"              0.88      0.04     456.6      0.04     0.00
"unique"                      0.84      0.04     425.5      0.42     0.02
"length"                      0.44      0.02     217.3      0.44     0.02
"unique.default"              0.22      0.01     112.0      0.16     0.01
"lengths"                     0.20      0.01      91.2      0.20     0.01
"=="                          0.16      0.01      86.5      0.16     0.01
"isFALSE"                     0.12      0.01      58.6      0.06     0.00
"t"                           0.12      0.01      78.5      0.06     0.00
"match.fun"                   0.08      0.00      15.8      0.08     0.00
"cbind"                       0.06      0.00      51.9      0.06     0.00
"is.factor"                   0.06      0.00      31.3      0.06     0.00
"numeric"                     0.06      0.00      22.9      0.06     0.00
"is.na"                       0.04      0.00      19.6      0.04     0.00
"mean"                        0.04      0.00      15.7      0.00     0.00
"@<-"                         0.02      0.00       7.9      0.02     0.00
"list"                        0.02      0.00       7.8      0.02     0.00
".findInheritedMethods"       0.02      0.00       7.9      0.00     0.00
"<Anonymous>"                 0.02      0.00       7.9      0.00     0.00
"print"                       0.02      0.00       7.9      0.00     0.00

$sample.interval
[1] 0.02

$sampling.time
[1] 2204.04

