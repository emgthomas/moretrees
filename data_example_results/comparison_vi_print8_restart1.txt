[1] 10
[1] 20
[1] 30
[1] 40
[1] 50
[1] 60
[1] 70
[1] 80
[1] 90
[1] 100
[1] 110
[1] 120
[1] 130
[1] 140
[1] 150
[1] 160
[1] 170
[1] 180
[1] 190
[1] 200
[1] 210
[1] 220
[1] 230
[1] 240
[1] 250
[1] 260
[1] 270
[1] 280
[1] 290
[1] 300
[1] 310
[1] 320
[1] 330
[1] 340
[1] 350
[1] 360
[1] 370
[1] 380
[1] 390
[1] 400
[1] 410
[1] 420
[1] 430
[1] 440
[1] 450
[1] 460
[1] 470
[1] 480
[1] 490
[1] 500
[1] 510
[1] 520
[1] 530
[1] 540
[1] 550
[1] 560
[1] 570
[1] 580
[1] 590
[1] 600
[1] 610
[1] 620
[1] 630
[1] 640
[1] 650
[1] 660
[1] 670
[1] 680
[1] 690
[1] 700
[1] 710
[1] 720
[1] 730
[1] 740
[1] 750
[1] 760
[1] 770
[1] 780
[1] 790
[1] 800
[1] 810
[1] 820
[1] 830
[1] 840
[1] 850
[1] 860
[1] 870
[1] 880
[1] 890
[1] 900
[1] 910
[1] 920
[1] 930
[1] 940
[1] 950
[1] 960
[1] 970
[1] 980
[1] 990
[1] 1000
[1] 1010
[1] 1020
[1] 1030
[1] 1040
[1] 1050
[1] 1060
[1] 1070
[1] 1080
[1] 1090
[1] 1100
[1] 1110
[1] 1120
[1] 1130
[1] 1140
[1] 1150
[1] 1160
[1] 1170
[1] 1180
[1] 1190
[1] 1200
[1] 1210
[1] 1220
[1] 1230
[1] 1240
[1] 1250
[1] 1260
[1] 1270
[1] 1280
[1] 1290
[1] 1300
[1] 1310
[1] 1320
[1] 1330
[1] 1340
[1] 1350
[1] 1360
[1] 1370
[1] 1380
[1] 1390
[1] 1400
[1] 1410
[1] 1420
[1] 1430
[1] 1440
[1] 1450
[1] 1460
[1] 1470
[1] 1480
[1] 1490
[1] 1500
[1] 1510
[1] 1520
[1] 1530
[1] 1540
[1] 1550
[1] 1560
[1] 1570
[1] 1580
[1] 1590
[1] 1600
[1] 1610
[1] 1620
[1] 1630
[1] 1640
[1] 1650
[1] 1660
[1] 1670
[1] 1680
[1] 1690
[1] 1700
[1] 1710
[1] 1720
[1] 1730
[1] 1740
[1] 1750
[1] 1760
[1] 1770
[1] 1780
[1] 1790
[1] 1800
[1] 1810
[1] 1820
[1] 1830
[1] 1840
[1] 1850
[1] 1860
[1] 1870
[1] 1880
[1] 1890
[1] 1900
[1] 1910
[1] 1920
[1] 1930
[1] 1940
[1] 1950
[1] 1960
[1] 1970
[1] 1980
[1] 1990
[1] 2000
[1] 2010
[1] 2020
[1] 2030
[1] 2040
[1] 2050
[1] 2060
[1] 2070
[1] 2080
[1] 2090
[1] 2100
[1] 2110
[1] 2120
[1] 2130
[1] 2140
[1] 2150
[1] 2160
[1] 2170
[1] 2180
[1] 2190
[1] 2200
[1] 2210
[1] 2220
[1] 2230
[1] 2240
[1] 2250
[1] 2260
[1] 2270
[1] 2280
[1] 2290
[1] 2300
[1] 2310
[1] 2320
[1] 2330
[1] 2340
[1] 2350
[1] 2360
[1] 2370
[1] 2380
[1] 2390
[1] 2400
[1] 2410
[1] 2420
[1] 2430
[1] 2440
[1] 2450
[1] 2460
[1] 2470
[1] 2480
[1] 2490
[1] 2500
[1] 2510
[1] 2520
[1] 2530
[1] 2540
[1] 2550
[1] 2560
[1] 2570
[1] 2580
[1] 2590
[1] 2600
[1] 2610
[1] 2620
[1] 2630
[1] 2640
[1] 2650
[1] 2660
[1] 2670
[1] 2680
[1] 2690
[1] 2700
[1] 2710
[1] 2720
[1] 2730
[1] 2740
[1] 2750
[1] 2760
[1] 2770
[1] 2780
[1] 2790
[1] 2800
[1] 2810
[1] 2820
[1] 2830
[1] 2840
[1] 2850
[1] 2860
[1] 2870
[1] 2880
[1] 2890
[1] 2900
[1] 2910
[1] 2920
[1] 2930
[1] 2940
[1] 2950
[1] 2960
[1] 2970
[1] 2980
[1] 2990
[1] 3000
[1] 3010
[1] 3020
[1] 3030
[1] 3040
[1] 3050
[1] 3060
[1] 3070
[1] 3080
[1] 3090
[1] 3100
[1] 3110
[1] 3120
[1] 3130
[1] 3140
[1] 3150
[1] 3160
[1] 3170
[1] 3180
[1] 3190
[1] 3200
[1] 3210
[1] 3220
[1] 3230
[1] 3240
[1] 3250
[1] 3260
[1] 3270
[1] 3280
[1] 3290
[1] 3300
[1] 3310
[1] 3320
[1] 3330
[1] 3340
[1] 3350
[1] 3360
[1] 3370
[1] 3380
[1] 3390
[1] 3400
[1] 3410
[1] 3420
[1] 3430
[1] 3440
[1] 3450
[1] 3460
[1] 3470
[1] 3480
[1] 3490
[1] 3500
[1] 3510
[1] 3520
[1] 3530
[1] 3540
[1] 3550
[1] 3560
[1] 3570
[1] 3580
[1] 3590
[1] 3600
[1] 3610
[1] 3620
[1] 3630
[1] 3640
[1] 3650
[1] 3660
[1] 3670
[1] 3680
[1] 3690
[1] "Converged after 3695 steps."
$by.self
                  self.time self.pct total.time total.pct mem.total
"unlist"             632.60    27.97     634.48     28.05  493421.9
"exp"                271.52    12.00     271.52     12.00  134527.4
"-"                  243.00    10.74     243.00     10.74  114355.6
"log1p.exp.vec"      164.00     7.25     416.82     18.43  162447.0
"FUN"                153.38     6.78    2261.76    100.00 1333080.9
"/"                  128.38     5.68     128.38      5.68   70952.3
"^"                  105.96     4.68     105.96      4.68   69167.9
"g_fun"              103.94     4.60     520.00     22.99  306643.7
"*"                   91.54     4.05      91.54      4.05   55518.8
"VI_step_ss"          80.36     3.55    2260.72     99.95 1332826.3
"log1p"               74.94     3.31      74.94      3.31       0.2
"sum"                 66.20     2.93      66.20      2.93   43984.1
"!="                  54.48     2.41      54.48      2.41   35418.1
"g_fun.vec"           27.72     1.23     346.04     15.30  168886.7
"<="                  23.76     1.05      23.76      1.05   19783.2
"ELBO.fun_ss"         13.86     0.61    1249.78     55.26  612797.1
"+"                   12.24     0.54      12.24      0.54    7893.1
"lapply"               4.98     0.22    2261.76    100.00 1333080.9
"diag<-"               2.98     0.13       3.16      0.14    2570.7
"%*%"                  2.04     0.09       2.04      0.09    1775.8
"("                    1.40     0.06       1.40      0.06     970.4
"length"               0.54     0.02       0.54      0.02     398.0
"lengths"              0.44     0.02       0.44      0.02     300.6
"standardGeneric"      0.24     0.01       3.42      0.15    2730.8
"unique"               0.18     0.01       0.86      0.04     566.7
"VI_binary_ss"         0.16     0.01    2261.76    100.00 1333080.9
"unique.default"       0.14     0.01       0.24      0.01     153.9
"sapply"               0.12     0.01     414.12     18.31  233439.6
"is.factor"            0.10     0.00       0.10      0.00      54.6
"isFALSE"              0.08     0.00       0.10      0.00      69.8
"=="                   0.08     0.00       0.08      0.00      43.6
"cbind"                0.08     0.00       0.08      0.00      81.3
"numeric"              0.08     0.00       0.08      0.00      30.5
"simplify2array"       0.06     0.00       0.92      0.04     582.5
"t"                    0.06     0.00       0.20      0.01     136.5
"print"                0.02     0.00       0.04      0.00      15.7
":"                    0.02     0.00       0.02      0.00       0.1
"is.na"                0.02     0.00       0.02      0.00       7.8
"match.fun"            0.02     0.00       0.02      0.00       7.6
"mean.default"         0.02     0.00       0.02      0.00       7.8
"print.default"        0.02     0.00       0.02      0.00       7.9

$by.total
                  total.time total.pct mem.total self.time self.pct
"FUN"                2261.76    100.00 1333080.9    153.38     6.78
"lapply"             2261.76    100.00 1333080.9      4.98     0.22
"VI_binary_ss"       2261.76    100.00 1333080.9      0.16     0.01
"%dopar%"            2261.76    100.00 1333080.9      0.00     0.00
"doTryCatch"         2261.76    100.00 1333080.9      0.00     0.00
"e$fun"              2261.76    100.00 1333080.9      0.00     0.00
"eval"               2261.76    100.00 1333080.9      0.00     0.00
"mclapply"           2261.76    100.00 1333080.9      0.00     0.00
"sendMaster"         2261.76    100.00 1333080.9      0.00     0.00
"try"                2261.76    100.00 1333080.9      0.00     0.00
"tryCatch"           2261.76    100.00 1333080.9      0.00     0.00
"tryCatchList"       2261.76    100.00 1333080.9      0.00     0.00
"tryCatchOne"        2261.76    100.00 1333080.9      0.00     0.00
"VI_step_ss"         2260.72     99.95 1332826.3     80.36     3.55
"ELBO.fun_ss"        1249.78     55.26  612797.1     13.86     0.61
"unlist"              634.48     28.05  493421.9    632.60    27.97
"g_fun"               520.00     22.99  306643.7    103.94     4.60
"loglogit"            488.30     21.59  192002.0      0.00     0.00
"log1p.exp.vec"       416.82     18.43  162447.0    164.00     7.25
"sapply"              414.12     18.31  233439.6      0.12     0.01
"g_fun.vec"           346.04     15.30  168886.7     27.72     1.23
"exp"                 271.52     12.00  134527.4    271.52    12.00
"-"                   243.00     10.74  114355.6    243.00    10.74
"/"                   128.38      5.68   70952.3    128.38     5.68
"^"                   105.96      4.68   69167.9    105.96     4.68
"*"                    91.54      4.05   55518.8     91.54     4.05
"log1p"                74.94      3.31       0.2     74.94     3.31
"sum"                  66.20      2.93   43984.1     66.20     2.93
"!="                   54.48      2.41   35418.1     54.48     2.41
"<="                   23.76      1.05   19783.2     23.76     1.05
"+"                    12.24      0.54    7893.1     12.24     0.54
"standardGeneric"       3.42      0.15    2730.8      0.24     0.01
"diag<-"                3.16      0.14    2570.7      2.98     0.13
"%*%"                   2.04      0.09    1775.8      2.04     0.09
"("                     1.40      0.06     970.4      1.40     0.06
"simplify2array"        0.92      0.04     582.5      0.06     0.00
"unique"                0.86      0.04     566.7      0.18     0.01
"length"                0.54      0.02     398.0      0.54     0.02
"lengths"               0.44      0.02     300.6      0.44     0.02
"unique.default"        0.24      0.01     153.9      0.14     0.01
"t"                     0.20      0.01     136.5      0.06     0.00
"is.factor"             0.10      0.00      54.6      0.10     0.00
"isFALSE"               0.10      0.00      69.8      0.08     0.00
"=="                    0.08      0.00      43.6      0.08     0.00
"cbind"                 0.08      0.00      81.3      0.08     0.00
"numeric"               0.08      0.00      30.5      0.08     0.00
"print"                 0.04      0.00      15.7      0.02     0.00
":"                     0.02      0.00       0.1      0.02     0.00
"is.na"                 0.02      0.00       7.8      0.02     0.00
"match.fun"             0.02      0.00       7.6      0.02     0.00
"mean.default"          0.02      0.00       7.8      0.02     0.00
"print.default"         0.02      0.00       7.9      0.02     0.00
"mean"                  0.02      0.00       7.8      0.00     0.00

$sample.interval
[1] 0.02

$sampling.time
[1] 2261.76

