[1] 10
[1] 20
[1] 30
[1] 40
[1] 50
[1] 60
[1] 70
[1] 80
[1] 90
[1] 100
[1] 110
[1] 120
[1] 130
[1] 140
[1] 150
[1] 160
[1] 170
[1] 180
[1] 190
[1] 200
[1] 210
[1] 220
[1] 230
[1] 240
[1] 250
[1] 260
[1] 270
[1] 280
[1] 290
[1] 300
[1] 310
[1] 320
[1] 330
[1] 340
[1] 350
[1] 360
[1] 370
[1] 380
[1] 390
[1] 400
[1] 410
[1] 420
[1] 430
[1] 440
[1] 450
[1] 460
[1] 470
[1] 480
[1] 490
[1] 500
[1] 510
[1] 520
[1] 530
[1] 540
[1] 550
[1] 560
[1] 570
[1] 580
[1] 590
[1] 600
[1] 610
[1] 620
[1] 630
[1] 640
[1] 650
[1] 660
[1] 670
[1] 680
[1] 690
[1] 700
[1] 710
[1] 720
[1] 730
[1] 740
[1] 750
[1] 760
[1] 770
[1] 780
[1] 790
[1] 800
[1] 810
[1] 820
[1] 830
[1] 840
[1] 850
[1] 860
[1] 870
[1] 880
[1] 890
[1] 900
[1] 910
[1] 920
[1] 930
[1] 940
[1] 950
[1] 960
[1] 970
[1] 980
[1] 990
[1] 1000
[1] 1010
[1] 1020
[1] 1030
[1] 1040
[1] 1050
[1] 1060
[1] 1070
[1] 1080
[1] 1090
[1] 1100
[1] 1110
[1] 1120
[1] 1130
[1] 1140
[1] 1150
[1] 1160
[1] 1170
[1] 1180
[1] 1190
[1] 1200
[1] 1210
[1] 1220
[1] 1230
[1] 1240
[1] 1250
[1] 1260
[1] 1270
[1] 1280
[1] 1290
[1] 1300
[1] 1310
[1] 1320
[1] 1330
[1] 1340
[1] 1350
[1] 1360
[1] 1370
[1] 1380
[1] 1390
[1] 1400
[1] 1410
[1] 1420
[1] 1430
[1] 1440
[1] 1450
[1] 1460
[1] 1470
[1] 1480
[1] 1490
[1] 1500
[1] 1510
[1] 1520
[1] 1530
[1] 1540
[1] 1550
[1] 1560
[1] 1570
[1] 1580
[1] 1590
[1] 1600
[1] 1610
[1] 1620
[1] 1630
[1] 1640
[1] 1650
[1] 1660
[1] 1670
[1] 1680
[1] 1690
[1] 1700
[1] 1710
[1] 1720
[1] 1730
[1] 1740
[1] 1750
[1] 1760
[1] 1770
[1] 1780
[1] 1790
[1] 1800
[1] 1810
[1] 1820
[1] 1830
[1] 1840
[1] 1850
[1] 1860
[1] 1870
[1] 1880
[1] 1890
[1] 1900
[1] 1910
[1] 1920
[1] 1930
[1] 1940
[1] 1950
[1] 1960
[1] 1970
[1] 1980
[1] 1990
[1] 2000
[1] 2010
[1] 2020
[1] 2030
[1] 2040
[1] 2050
[1] 2060
[1] 2070
[1] 2080
[1] 2090
[1] 2100
[1] 2110
[1] 2120
[1] 2130
[1] 2140
[1] 2150
[1] 2160
[1] 2170
[1] 2180
[1] 2190
[1] 2200
[1] 2210
[1] 2220
[1] 2230
[1] 2240
[1] 2250
[1] 2260
[1] 2270
[1] 2280
[1] 2290
[1] 2300
[1] 2310
[1] 2320
[1] 2330
[1] 2340
[1] 2350
[1] 2360
[1] 2370
[1] 2380
[1] 2390
[1] 2400
[1] 2410
[1] 2420
[1] 2430
[1] 2440
[1] 2450
[1] 2460
[1] 2470
[1] 2480
[1] 2490
[1] 2500
[1] 2510
[1] 2520
[1] 2530
[1] 2540
[1] 2550
[1] 2560
[1] 2570
[1] 2580
[1] 2590
[1] 2600
[1] 2610
[1] 2620
[1] 2630
[1] 2640
[1] 2650
[1] 2660
[1] 2670
[1] 2680
[1] 2690
[1] 2700
[1] 2710
[1] 2720
[1] 2730
[1] 2740
[1] 2750
[1] 2760
[1] 2770
[1] 2780
[1] 2790
[1] 2800
[1] 2810
[1] 2820
[1] 2830
[1] 2840
[1] 2850
[1] 2860
[1] 2870
[1] 2880
[1] 2890
[1] 2900
[1] 2910
[1] 2920
[1] 2930
[1] 2940
[1] 2950
[1] 2960
[1] 2970
[1] 2980
[1] 2990
[1] 3000
[1] 3010
[1] 3020
[1] 3030
[1] 3040
[1] 3050
[1] 3060
[1] 3070
[1] 3080
[1] 3090
[1] 3100
[1] 3110
[1] 3120
[1] 3130
[1] 3140
[1] 3150
[1] 3160
[1] 3170
[1] 3180
[1] 3190
[1] 3200
[1] 3210
[1] 3220
[1] 3230
[1] 3240
[1] 3250
[1] 3260
[1] 3270
[1] 3280
[1] 3290
[1] 3300
[1] 3310
[1] 3320
[1] 3330
[1] 3340
[1] 3350
[1] 3360
[1] "Converged after 3369 steps."
$by.self
                  self.time self.pct total.time total.pct mem.total
"unlist"            1428.34    21.32    1430.46     21.35  437463.6
"exp"                806.20    12.03     806.20     12.03  275827.2
"^"                  686.84    10.25     686.84     10.25  201870.0
"FUN"                517.88     7.73    6700.80    100.00 2496402.2
"log1p.exp.vec"      468.80     7.00    1200.66     17.92  355288.0
"-"                  444.30     6.63     444.30      6.63  193314.5
"g_fun.vec"          421.10     6.28    1356.98     20.25  417119.2
"*"                  405.48     6.05     405.48      6.05  210277.9
"g_fun"              338.14     5.05    1610.62     24.04  560880.4
"/"                  328.18     4.90     328.18      4.90  228699.9
"log1p"              218.80     3.27     218.80      3.27       0.2
"!="                 185.88     2.77     185.88      2.77  147720.0
"sum"                185.30     2.77     185.30      2.77  189896.8
"<="                 101.26     1.51     101.26      1.51   64248.7
"VI_step_ss"          94.30     1.41    6699.64     99.98 2495869.3
"+"                   32.86     0.49      32.86      0.49   17414.3
"ELBO.fun_ss"         16.72     0.25    3656.98     54.58 1216487.0
"lapply"               5.86     0.09    6700.80    100.00 2496402.2
"diag<-"               5.32     0.08       5.46      0.08    3301.5
"%*%"                  4.32     0.06       4.32      0.06    2094.7
"("                    2.04     0.03       2.04      0.03    1807.5
"length"               0.60     0.01       0.60      0.01     337.3
"lengths"              0.38     0.01       0.38      0.01     321.3
"=="                   0.28     0.00       0.28      0.00     192.5
"unique"               0.24     0.00       0.82      0.01     661.6
"sapply"               0.22     0.00    1384.28     20.66  473814.3
"numeric"              0.22     0.00       0.22      0.00     120.5
"standardGeneric"      0.20     0.00       5.70      0.09    3525.2
"unique.default"       0.16     0.00       0.20      0.00     127.3
"VI_binary_ss"         0.12     0.00    6700.80    100.00 2496402.2
"match.fun"            0.08     0.00       0.08      0.00      68.8
"t"                    0.06     0.00       0.18      0.00     182.1
"print.default"        0.06     0.00       0.06      0.00      41.6
"%%"                   0.04     0.00       0.04      0.00      27.8
":"                    0.04     0.00       0.04      0.00      36.8
"cbind"                0.04     0.00       0.04      0.00      49.7
"is.factor"            0.04     0.00       0.04      0.00      22.4
"isFALSE"              0.04     0.00       0.04      0.00      46.3
"simplify2array"       0.02     0.00       0.84      0.01     669.7
"list"                 0.02     0.00       0.02      0.00      12.2
"min"                  0.02     0.00       0.02      0.00      22.0

$by.total
                  total.time total.pct mem.total self.time self.pct
"FUN"                6700.80    100.00 2496402.2    517.88     7.73
"lapply"             6700.80    100.00 2496402.2      5.86     0.09
"VI_binary_ss"       6700.80    100.00 2496402.2      0.12     0.00
"%dopar%"            6700.80    100.00 2496402.2      0.00     0.00
"doTryCatch"         6700.80    100.00 2496402.2      0.00     0.00
"e$fun"              6700.80    100.00 2496402.2      0.00     0.00
"eval"               6700.80    100.00 2496402.2      0.00     0.00
"mclapply"           6700.80    100.00 2496402.2      0.00     0.00
"sendMaster"         6700.80    100.00 2496402.2      0.00     0.00
"try"                6700.80    100.00 2496402.2      0.00     0.00
"tryCatch"           6700.80    100.00 2496402.2      0.00     0.00
"tryCatchList"       6700.80    100.00 2496402.2      0.00     0.00
"tryCatchOne"        6700.80    100.00 2496402.2      0.00     0.00
"VI_step_ss"         6699.64     99.98 2495869.3     94.30     1.41
"ELBO.fun_ss"        3656.98     54.58 1216487.0     16.72     0.25
"g_fun"              1610.62     24.04  560880.4    338.14     5.05
"unlist"             1430.46     21.35  437463.6   1428.34    21.32
"sapply"             1384.28     20.66  473814.3      0.22     0.00
"g_fun.vec"          1356.98     20.25  417119.2    421.10     6.28
"loglogit"           1284.54     19.17  404530.6      0.00     0.00
"log1p.exp.vec"      1200.66     17.92  355288.0    468.80     7.00
"exp"                 806.20     12.03  275827.2    806.20    12.03
"^"                   686.84     10.25  201870.0    686.84    10.25
"-"                   444.30      6.63  193314.5    444.30     6.63
"*"                   405.48      6.05  210277.9    405.48     6.05
"/"                   328.18      4.90  228699.9    328.18     4.90
"log1p"               218.80      3.27       0.2    218.80     3.27
"!="                  185.88      2.77  147720.0    185.88     2.77
"sum"                 185.30      2.77  189896.8    185.30     2.77
"<="                  101.26      1.51   64248.7    101.26     1.51
"+"                    32.86      0.49   17414.3     32.86     0.49
"standardGeneric"       5.70      0.09    3525.2      0.20     0.00
"diag<-"                5.46      0.08    3301.5      5.32     0.08
"%*%"                   4.32      0.06    2094.7      4.32     0.06
"("                     2.04      0.03    1807.5      2.04     0.03
"simplify2array"        0.84      0.01     669.7      0.02     0.00
"unique"                0.82      0.01     661.6      0.24     0.00
"length"                0.60      0.01     337.3      0.60     0.01
"lengths"               0.38      0.01     321.3      0.38     0.01
"=="                    0.28      0.00     192.5      0.28     0.00
"numeric"               0.22      0.00     120.5      0.22     0.00
"unique.default"        0.20      0.00     127.3      0.16     0.00
"t"                     0.18      0.00     182.1      0.06     0.00
"match.fun"             0.08      0.00      68.8      0.08     0.00
"print.default"         0.06      0.00      41.6      0.06     0.00
"print"                 0.06      0.00      41.6      0.00     0.00
"%%"                    0.04      0.00      27.8      0.04     0.00
":"                     0.04      0.00      36.8      0.04     0.00
"cbind"                 0.04      0.00      49.7      0.04     0.00
"is.factor"             0.04      0.00      22.4      0.04     0.00
"isFALSE"               0.04      0.00      46.3      0.04     0.00
"list"                  0.02      0.00      12.2      0.02     0.00
"min"                   0.02      0.00      22.0      0.02     0.00

$sample.interval
[1] 0.02

$sampling.time
[1] 6700.8

